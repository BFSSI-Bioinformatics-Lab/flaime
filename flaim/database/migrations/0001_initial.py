# Generated by Django 2.2.4 on 2019-08-19 11:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=300)),
                ('brand', models.CharField(max_length=100)),
                ('store', models.CharField(choices=[('LOBLAWS', 'Loblaws'), ('WALMART', 'Walmart'), ('AMAZON', 'Amazon')], max_length=7)),
                ('product_code', models.CharField(max_length=100)),
                ('upc_code', models.CharField(blank=True, max_length=100, null=True)),
                ('nutrition_available', models.BooleanField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('scrape_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='WalmartProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='walmart_product', to='database.Product')),
            ],
            options={
                'verbose_name': 'Walmart Product',
                'verbose_name_plural': 'Walmart Products',
            },
        ),
        migrations.CreateModel(
            name='NutritionFacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('total_size', models.CharField(blank=True, max_length=100, null=True)),
                ('serving_size_raw', models.CharField(blank=True, max_length=100, null=True)),
                ('serving_size', models.IntegerField(blank=True, null=True)),
                ('serving_size_units', models.CharField(blank=True, choices=[('g', 'grams'), ('mL', 'millilitres')], max_length=11, null=True)),
                ('ingredients', models.TextField(blank=True, null=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('sodium', models.FloatField(blank=True, null=True)),
                ('sodium_dv', models.FloatField(blank=True, null=True)),
                ('calcium', models.FloatField(blank=True, null=True)),
                ('calcium_dv', models.FloatField(blank=True, null=True)),
                ('total_fat', models.FloatField(blank=True, null=True)),
                ('total_fat_dv', models.FloatField(blank=True, null=True)),
                ('monounsaturated_fat', models.FloatField(blank=True, null=True)),
                ('polyunsaturated_fat', models.FloatField(blank=True, null=True)),
                ('saturated_fat', models.FloatField(blank=True, null=True)),
                ('saturated_fat_dv', models.FloatField(blank=True, null=True)),
                ('trans_fat', models.FloatField(blank=True, null=True)),
                ('trans_fat_dv', models.FloatField(blank=True, null=True)),
                ('potassium', models.FloatField(blank=True, null=True)),
                ('potassium_dv', models.FloatField(blank=True, null=True)),
                ('total_carbohydrate', models.FloatField(blank=True, null=True)),
                ('total_carbohydrate_dv', models.FloatField(blank=True, null=True)),
                ('dietary_fibre', models.FloatField(blank=True, null=True)),
                ('dietary_fibre_dv', models.FloatField(blank=True, null=True)),
                ('sugars', models.FloatField(blank=True, null=True)),
                ('sugars_dv', models.FloatField(blank=True, null=True)),
                ('protein', models.FloatField(blank=True, null=True)),
                ('cholesterol', models.FloatField(blank=True, null=True)),
                ('vitamin_a', models.FloatField(blank=True, null=True)),
                ('vitamin_a_dv', models.FloatField(blank=True, null=True)),
                ('vitamin_c', models.FloatField(blank=True, null=True)),
                ('vitamin_c_dv', models.FloatField(blank=True, null=True)),
                ('vitamin_d', models.FloatField(blank=True, null=True)),
                ('vitamin_e', models.FloatField(blank=True, null=True)),
                ('niacin', models.FloatField(blank=True, null=True)),
                ('vitamin_b6', models.FloatField(blank=True, null=True)),
                ('folacin', models.FloatField(blank=True, null=True)),
                ('folate', models.FloatField(blank=True, null=True)),
                ('vitamin_b12', models.FloatField(blank=True, null=True)),
                ('pantothenic_acid', models.FloatField(blank=True, null=True)),
                ('pantothenate', models.FloatField(blank=True, null=True)),
                ('alcohol', models.FloatField(blank=True, null=True)),
                ('carbohydrate', models.FloatField(blank=True, null=True)),
                ('erythritol', models.FloatField(blank=True, null=True)),
                ('glycerol', models.FloatField(blank=True, null=True)),
                ('isomalt', models.FloatField(blank=True, null=True)),
                ('lactitol', models.FloatField(blank=True, null=True)),
                ('maltitol', models.FloatField(blank=True, null=True)),
                ('mannitol', models.FloatField(blank=True, null=True)),
                ('polydextrose', models.FloatField(blank=True, null=True)),
                ('sorbitol', models.FloatField(blank=True, null=True)),
                ('xylitol', models.FloatField(blank=True, null=True)),
                ('iron', models.FloatField(blank=True, null=True)),
                ('iron_dv', models.FloatField(blank=True, null=True)),
                ('riboflavin', models.FloatField(blank=True, null=True)),
                ('selenium', models.FloatField(blank=True, null=True)),
                ('magnesium', models.FloatField(blank=True, null=True)),
                ('phosphorus', models.FloatField(blank=True, null=True)),
                ('thiamine', models.FloatField(blank=True, null=True)),
                ('zinc', models.FloatField(blank=True, null=True)),
                ('nutrition_raw_text', models.TextField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.Product')),
            ],
            options={
                'verbose_name': 'Product Nutrition',
                'verbose_name_plural': 'Product Nutrition',
            },
        ),
        migrations.CreateModel(
            name='LoblawsProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('subcategory', models.CharField(blank=True, max_length=100, null=True)),
                ('section', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_directory', models.CharField(blank=True, max_length=500, null=True)),
                ('breadcrumbs', models.CharField(blank=True, max_length=300, null=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loblaws_product', to='database.Product')),
            ],
            options={
                'verbose_name': 'Loblaws Product',
                'verbose_name_plural': 'Loblaws Products',
            },
        ),
        migrations.CreateModel(
            name='AmazonProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='amazon_product', to='database.Product')),
            ],
            options={
                'verbose_name': 'Amazon Product',
                'verbose_name_plural': 'Amazon Products',
            },
        ),
    ]
